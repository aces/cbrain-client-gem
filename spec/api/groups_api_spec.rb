=begin
#CBRAIN API

#API for interacting with the CBRAIN Platform

OpenAPI spec version: 5.1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for CbrainClient::GroupsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GroupsApi' do
  before do
    # run before each test
    @instance = CbrainClient::GroupsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GroupsApi' do
    it 'should create an instance of GroupsApi' do
      expect(@instance).to be_instance_of(CbrainClient::GroupsApi)
    end
  end

  # unit tests for groups_get
  # Get a list of the Groups (projects) available to the current user.
  # This method returns a list of all of the groups that the current user has access to. 
  # @param [Hash] opts the optional parameters
  # @return [Array<Group>]
  describe 'groups_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for groups_id_delete
  # Deletes a Group (project).
  # This method allows the removal of Groups (projects) that are no longer necessary. Groups that have Userfiles associated with them may not be deleted. 
  # @param id ID of the Group to delete.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'groups_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for groups_id_get
  # Get information on a Group (project).
  # This method returns information on a single Group (project), specified by the ID parameter. Information returned includes the list of Users who are members of the group, the ID of the Site the Group is part of, and whether or not the group is visible to Regular Users. 
  # @param id ID of the Group to get information on.
  # @param [Hash] opts the optional parameters
  # @return [Group]
  describe 'groups_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for groups_id_put
  # Update the properties of a Group (project).
  # This method allows the properties of a Group (project) to be updated. This includes the User membership, the ID of the site the Group belongs to, and the visibility status of the group to Regular Users. 
  # @param id ID of the Group
  # @param group_mod_req An object with the group information to update
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'groups_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for groups_post
  # Creates a new Group.
  # This method creates a new Group, which allows users to organize their files and tasks. 
  # @param group_mod_req An object describing the group to create
  # @param [Hash] opts the optional parameters
  # @return [Group]
  describe 'groups_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
