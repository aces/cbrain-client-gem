=begin
#CBRAIN API

#API for interacting with the CBRAIN Platform

OpenAPI spec version: 5.1.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.8

=end

require 'spec_helper'
require 'json'

# Unit tests for CbrainClient::UsersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @instance = CbrainClient::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@instance).to be_instance_of(CbrainClient::UsersApi)
    end
  end

  # unit tests for users_get
  # Returns all of the users in CBRAIN. Only available to admins.
  # Returns all of the users registered in CBRAIN, as well as information on their permissions and group/site memberships.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number when paginating. See also the per_page parameter
  # @option opts [Integer] :per_page Size of each page when paginating. See also the page parameter
  # @return [Array<User>]
  describe 'users_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_delete
  # Deletes a CBRAIN user
  # Deletes a CBRAIN User from the database 
  # @param id ID of user to update
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'users_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_get
  # Returns information about a user
  # Returns the information about the user associated with the ID given in argument. A normal user only has access to her own information, while an administrator or site manager can have access to a larger set of users. 
  # @param id ID of the user
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'users_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_patch
  # Update information about a user
  # Updates the information about a user 
  # @param id ID of user to update
  # @param user_mod_req An object representing a request for a new User
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'users_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_post
  # Create a new user in CBRAIN. Only available to admins.
  # Creates a new user in CBRAIN. Only admins can create new users. 
  # @param user_mod_req An object representing a request for a new User
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'users_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
